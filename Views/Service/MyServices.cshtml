@model IEnumerable<ServiceApplication>
<head>
	<title>My Services</title>
</head>
<body>

	<div class="container max-w-4xl mx-auto bg-light p-5 min-vh-100">

		<div class="d-flex justify-content-between align-items-center mb-4">
			<h1 class="display-5 font-weight-bold text-primary">My Services</h1>
			<div>
				<form method="get" action="@Url.Action("MyServices", "Service")">
					<div class="mb-4 d-flex justify-content-end">
						<select id="statusFilter" name="statusFilter" class="form-select w-auto" aria-label="Filter status">
							@foreach (var status in Enum.GetValues(typeof(GovConnect.Models.Status)))
							{
								var statusValue = (GovConnect.Models.Status)status;

								if (ViewBag.Status != null && ViewBag.Status.Equals(statusValue))
								{
									<option value="@statusValue" selected>@statusValue</option>
								}
								else
								{
									<option value="@statusValue">@statusValue</option>
								}
							}
						</select>
					</div>
				</form>

			</div>
		</div>
		<div class="row g-4">
			@foreach (var service in Model)
			{
				<div class="col-md-4">
					<div class="card shadow-sm border-light rounded-lg">
						<div class="card-body">
							<h5 class="card-title text-primary">@service.ServiceName</h5>                              <p class="card-text"><strong>Status:</strong> @service.Status</p>
							<p class="card-text"><strong>Applied on:</strong> @service.ApplicationDate.ToString("dd MMM yyyy")</p>

							@if (service.Status != Status.Completed && service.Status != Status.Withdrawn)
							{
								<button class="btn btn-warning w-100 mt-3" onclick="location.href='@Url.Action("Withdraw", "Service", new { id = service.ApplicationID })'">Withdraw</button>
							}
							else
							{
								<button class="btn btn-warning w-100 mt-3" disabled>Withdraw</button>
							}
						</div>
					</div>
				</div>
			}
		</div>
	</div>
	<script src="~/js/MyServices.js"></script>
</body>
