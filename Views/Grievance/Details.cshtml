@model GrievanceDetailsViewModel

<head>
    <title>Grievance Details</title>
</head>

<div class="container mt-4 min-vh-100 pb-5">
    <div class="card shadow-lg">
        <div class="card-header bg-success text-white">
            <h2>Grievance Details</h2>
        </div>
        <div class="card-body">
            <h4 class="card-title">@Model.Grievance.Title</h4>
            <p class="text-muted">Posted on: @Model.Grievance.CreatedAt.ToString("MMMM dd, yyyy")</p>

            <hr />

            <div class="mb-3">
                <h5>Status:</h5>
                <p class="badge bg-primary">@Model.Grievance.Status</p>
            </div>

            <div class="mb-3">
                <h5>Department:</h5>
                <p>@Model.Grievance.GetDepartmentName()</p>
            </div>

            <div class="mb-3">
                <h5>Description:</h5>
                <p>@Model.Grievance.Description</p>
            </div>

            @if (Model.Files != null && Model.Files.Any())
            {
                <div class="mb-3">
                    <h5>Attached Files:</h5>
                    <ul>
                        @foreach (var file in Model.Files)
                        {
                            <li>
                                <strong>
                                    <a href="@Url.Action("ViewFile", "Grievance", new { fileId = file.FileID })" target="_blank" style="color:black">@file.FileName</a>
                                </strong>
                                <a href="@Url.Action("DownloadFile", "Grievance", new { id = Model.Grievance.GrievanceID, fileId = file.FileID })" class="btn btn-link">Download</a>
                            </li>
                        }
                    </ul>
                </div>
            }

            <div class="mb-3">
                <h5>TimeLine:</h5>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Work</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Grievance.GetTimeLine())
                        {
                            <tr>
                                <td>@item.Date.ToString("MMMM dd, yyyy")</td>
                                <td>@item.Work</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <a href="@Url.Action("MyGrievances", "Grievance")" class="btn btn-success mt-3">Back to My Grievances</a>
        </div>
    </div>
</div>

<!-- Static Chat Section -->
<div id="chatbot-container" class="position-fixed bottom-0 end-0 p-3">
    <button id="chatbot-toggle-btn" class="btn btn-primary rounded-circle" data-bs-toggle="collapse" href="#chatBox" aria-expanded="false" aria-controls="chatBox">
        💬
    </button>

    <!-- Chat Box -->
    <div id="chatBox" class="collapse" style="width: 300px; height: 400px; border: 1px solid #ccc; border-radius: 8px; background-color: white;">
        <div class="card">
            <div class="card-header bg-success text-white">
                <strong>Grievance Chat</strong>
            </div>
            <div class="card-body" id="chatContent" style="overflow-y: auto; max-height: 300px;">
                <!-- Static Chat Messages -->
                <div class="message">
                    <div><strong>Pranav:</strong> When will the roads be cleaned in my area? The garbage is piling up!</div>
                    <div class="text-muted" style="font-size: 0.9em;">(Posted on: March 5, 2024)</div>
                </div>
                <div class="message" style="margin-top: 15px;">
                    <div><strong>Surendra:</strong> Hello Pranav, we are aware of the issue. The cleaning crew will be dispatched by tomorrow afternoon.</div>
                    <div class="text-muted" style="font-size: 0.9em;">(Posted on: March 5, 2024)</div>
                </div>
                <div class="message" style="margin-top: 15px;">
                    <div><strong>Pranav:</strong> Thanks for the update! Can you confirm if it will cover the main road as well?</div>
                    <div class="text-muted" style="font-size: 0.9em;">(Posted on: March 6, 2024)</div>
                </div>
                <div class="message" style="margin-top: 15px;">
                    <div><strong>Surendra:</strong> Yes, the cleaning crew will cover the main road, including the area around the market.</div>
                    <div class="text-muted" style="font-size: 0.9em;">(Posted on: March 6, 2024)</div>
                </div>
            </div>
            <div class="card-footer">
                <input type="text" class="form-control" id="messageInput" placeholder="Type your message..." />
                <button class="btn btn-primary mt-2 w-100" id="sendMessageBtn">Send</button>
            </div>
        </div>
    </div>
</div>

<!-- Chatbot Script -->
<script>
    // Simple toggle for chatbot collapse
    document.getElementById("chatbot-toggle-btn").addEventListener("click", function (event) {
        event.preventDefault(); // Prevent default action of the button
        var chatBox = document.getElementById("chatBox");
        var chatButton = document.getElementById("chatbot-toggle-btn");


        // Update the button icon based on the chat box visibility
        if (chatBox.classList.contains("show")) {
            chatButton.innerHTML = "❌"; // Show cross when chat is open
        } else {
            chatButton.innerHTML = "💬"; // Show chat icon when chat is closed
        }
    });

    // Handle sending message (for static demo purposes, we'll log it)
    document.getElementById("sendMessageBtn").addEventListener("click", function () {
        var messageInput = document.getElementById("messageInput");
        var messageText = messageInput.value;

        if (messageText.trim() !== "") {
            var chatContent = document.getElementById("chatContent");

            // Append new message to the chat window
            var newMessage = document.createElement("div");
            newMessage.classList.add("message");
            newMessage.innerHTML = "<div><strong>Pranav:</strong> " + messageText + "</div><div class='text-muted' style='font-size: 0.9em;'>(Posted on: " + new Date().toLocaleDateString() + ")</div>";
            chatContent.appendChild(newMessage);

            // Scroll to the bottom of the chat
            chatContent.scrollTop = chatContent.scrollHeight;

            // Clear the input
            messageInput.value = "";
        }
    });
</script>
